name: Go CI/CD

on:
  push:
    paths:
      - 'main.go'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Random Tag
        id: tag
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          RANDOM_STRING=$(openssl rand -hex 4)
          TAG_NAME="x86_64_arm64-$TIMESTAMP-$RANDOM_STRING"
          echo "Generated tag: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create and Push Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.tag.outputs.tag_name }}
          git push origin ${{ steps.tag.outputs.tag_name }}

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Actions Output ${{ steps.tag.outputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

    outputs:
      tag_name: ${{ steps.tag.outputs.tag_name }}

  build-and-upload:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Tidy dependencies
        run: go mod tidy

      - name: Build
        run: |
          GOARCH=${{ matrix.arch }} go build \
            -ldflags "-X main.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -X main.BuildBranch=$(git rev-parse --abbrev-ref HEAD)" \
            -v \
            -o ./bin/goober-central-${{ matrix.arch }} ./...

      - name: Test
        run: go test -v ./...

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name }}
          files: ./bin/goober-central-${{ matrix.arch }}
